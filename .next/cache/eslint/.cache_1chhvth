[{"C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\api\\auth\\[...nextauth].js":"1","C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\api\\hello.js":"2","C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\index.js":"3","C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\login.js":"4","C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\_app.js":"5","C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\_middleware.js":"6","C:\\Users\\lenovo\\Desktop\\spotify-clone\\components\\Center.jsx":"7","C:\\Users\\lenovo\\Desktop\\spotify-clone\\components\\Player.jsx":"8","C:\\Users\\lenovo\\Desktop\\spotify-clone\\components\\Sidebar.jsx":"9","C:\\Users\\lenovo\\Desktop\\spotify-clone\\components\\Song.jsx":"10","C:\\Users\\lenovo\\Desktop\\spotify-clone\\components\\Songs.jsx":"11","C:\\Users\\lenovo\\Desktop\\spotify-clone\\lib\\spotify.js":"12","C:\\Users\\lenovo\\Desktop\\spotify-clone\\lib\\time.js":"13"},{"size":2533,"mtime":1649623641628,"results":"14","hashOfConfig":"15"},{"size":170,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":820,"mtime":1650103521573,"results":"17","hashOfConfig":"15"},{"size":938,"mtime":1650244658825,"results":"18","hashOfConfig":"15"},{"size":364,"mtime":1650067440495,"results":"19","hashOfConfig":"15"},{"size":637,"mtime":1649682161748,"results":"20","hashOfConfig":"15"},{"size":2344,"mtime":1650240579317,"results":"21","hashOfConfig":"15"},{"size":4019,"mtime":1650244816578,"results":"22","hashOfConfig":"15"},{"size":2847,"mtime":1650102171455,"results":"23","hashOfConfig":"15"},{"size":1505,"mtime":1650103188966,"results":"24","hashOfConfig":"15"},{"size":486,"mtime":1650099463895,"results":"25","hashOfConfig":"15"},{"size":893,"mtime":1649619691606,"results":"26","hashOfConfig":"15"},{"size":278,"mtime":1650101110168,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ykoq94",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\api\\auth\\[...nextauth].js",[],[],"C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\api\\hello.js",[],[],"C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\index.js",[],[],"C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\login.js",["71"],[],"import React from 'react'\r\nimport { getProviders, signIn } from 'next-auth/react'\r\n\r\nfunction Login({ providers }) {\r\n  return (\r\n    <div className='flex flex-col items-center bg-black min-h-screen w-full justify-center'>\r\n      \r\n      <img className='w-52 mb-10' src=\"https://www.freepnglogos.com/uploads/spotify-logo-png/spotify-logo-transparent-spotify-logo-images-25.png\" alt=\"Spotify Logo\" />\r\n\r\n      {Object.values(providers).map((provider) => (\r\n\r\n        <div key={provider.name}>\r\n          <button className='bg-[#18d860] text-white py-3 px-5 rounded-full font-semibold' onClick={ () => signIn(provider.id, {callbackUrl: \"/\"}) }>\r\n            Login with {provider.name}\r\n          </button>\r\n        </div>\r\n      ))}\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n\r\nexport async function getServerSideProps(context) {\r\n\r\n  const providers = await getProviders()\r\n\r\n  return {\r\n    props: {\r\n      providers,\r\n    }\r\n  }\r\n}\r\n","C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\_app.js",[],[],"C:\\Users\\lenovo\\Desktop\\spotify-clone\\pages\\_middleware.js",[],[],"C:\\Users\\lenovo\\Desktop\\spotify-clone\\components\\Center.jsx",["72","73","74"],[],"import { React, useEffect, useState } from 'react'\r\nimport { signOut, useSession } from 'next-auth/react'\r\nimport { ChevronDownIcon } from '@heroicons/react/outline'\r\nimport { shuffle } from 'lodash'\r\nimport { useRecoilState, useRecoilValue } from 'recoil'\r\nimport { playlistIdState, playlistState } from '../atoms/playlistAtom'\r\nimport useSpotify from '../hooks/useSpotify'\r\nimport Songs from './Songs'\r\n\r\nconst colors = [\r\n    \"from-indigo-500\",\r\n    \"from-blue-500\",\r\n    \"from-green-500\",\r\n    \"from-red-500\",\r\n    \"from-yellow-500\",\r\n    \"from-pink-500\",\r\n    \"from-purple-500\",\r\n]\r\n\r\nfunction Center() {\r\n\r\n    const { data: session } = useSession()\r\n    const spotifyApi = useSpotify()\r\n    const [color, setColor] = useState(null)\r\n    const playlistId = useRecoilValue(playlistIdState)\r\n    const [playlist, setPlaylist] = useRecoilState(playlistState)\r\n\r\n    useEffect(() => {\r\n        setColor(shuffle(colors).pop())\r\n    }, [playlistId])\r\n\r\n    useEffect(() => {\r\n        spotifyApi\r\n        .getPlaylist(playlistId)\r\n        .then((data) => {\r\n            setPlaylist(data.body)\r\n        })\r\n        .catch((err) => console.log(\"Something went wrong!\", err))\r\n    }, [spotifyApi, playlistId])\r\n\r\n    console.log(playlist)\r\n\r\n  return (\r\n    <div className='flex-grow h-screen overflow-y-scroll scrollbar-hide font-[Roboto]'>\r\n        <header className='absolute top-5 right-8'>\r\n            <div className='flex items-center bg-black space-x-3 opacity-90 hover:opacity-80 cursor-pointer rounded-full p-1 pr-3 text-white' onClick={signOut}>\r\n                <img className='rounded-full w-10 h-10' src={session?.user.image} alt='' />\r\n                <h2 className='font-semibold'> {session?.user.name} </h2>\r\n                <ChevronDownIcon className='h-5 w-5' />\r\n            </div>\r\n        </header>\r\n        <section className={`flex items-end space-x-7 bg-gradient-to-b to-black ${color} h-80 text-white p-8`}>\r\n            <img className='h-44 w-44 shadow-2xl' src={playlist?.images?.[0]?.url} alt='' />\r\n            <div>\r\n                <p className='font-semibold'> PLAYLIST </p>\r\n                <h1 className='text-2xl md:text-3xl xl:text-5xl font-bold'> {playlist?.name} </h1>\r\n            </div>\r\n        </section>\r\n\r\n        <div>\r\n            <Songs />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Center","C:\\Users\\lenovo\\Desktop\\spotify-clone\\components\\Player.jsx",["75","76","77","78"],[],"import { React, useCallback, useEffect, useState } from 'react'\r\nimport { useSession } from 'next-auth/react'\r\nimport useSpotify from '../hooks/useSpotify'\r\nimport { useRecoilState } from 'recoil'\r\nimport { currentTrackIdState, isPlayingState } from '../atoms/songAtom'\r\nimport useSongInfo from '../hooks/useSongInfo'\r\nimport { HeartIcon, VolumeUpIcon as VolumeDownIcon } from '@heroicons/react/outline'\r\nimport { FastForwardIcon, PauseIcon, PlayIcon, ReplyIcon, RewindIcon, VolumeUpIcon, SwitchHorizontalIcon } from '@heroicons/react/solid'\r\nimport { debounce } from 'lodash'\r\n\r\nfunction Player() {\r\n\r\n    const spotifyApi = useSpotify()\r\n    const { data: session, status } = useSession\r\n    const [currentTrackId, setCurrentIdTrack] = useRecoilState(currentTrackIdState)\r\n\r\n    const [isPlaying, setIsPlaying] = useRecoilState(isPlayingState)\r\n    const [volume, setVolume] = useState(50)\r\n\r\n    const songInfo = useSongInfo()\r\n\r\n    const fetchCurrentSong = () => {\r\n        if(!songInfo) {\r\n            spotifyApi.getMyCurrentPlayingTrack()\r\n            .then((data) => {\r\n\r\n                console.log(\"Now Playing : \", data.body?.item)\r\n                setCurrentIdTrack(data.body?.item?.id)\r\n\r\n                spotifyApi.getMyCurrentPlaybackState()\r\n                .then((data) => {\r\n                    setIsPlaying(data.body?.is_playing)\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    const handlePlayPause = () => {\r\n        spotifyApi.getMyCurrentPlaybackState().then((data) => {\r\n            if(data.body.is_playing) {\r\n                spotifyApi.pause()\r\n                setIsPlaying(false)\r\n            } else {\r\n                spotifyApi.play()\r\n                setIsPlaying(true)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(spotifyApi.getAccessToken() && !currentTrackId) {\r\n            \r\n            // Fetch song info\r\n            fetchCurrentSong()\r\n            setVolume(50)\r\n        }\r\n\r\n    }, [currentTrackIdState, spotifyApi, session])\r\n\r\n    useEffect(() => {\r\n        if(volume > 0 && volume < 100) {\r\n            debouncedAdjustVolume(volume)\r\n        }\r\n\r\n    }, [volume])\r\n\r\n    const debouncedAdjustVolume = useCallback(\r\n        debounce((volume) => {\r\n            spotifyApi.setVolume(volume)\r\n            .catch((err) => {})\r\n        }, 500),\r\n        []\r\n    )\r\n\r\n  return (\r\n    <div className='h-24 bg-gradient-to-b from-black to-gray-900 text-white grid grid-cols-3 text-xs md:text-base px-2 md:px-8'>\r\n        <div className='flex items-center space-x-4'>\r\n            <img className='hidden md:inline h-10 w-10' src={songInfo?.album.images?.[0]?.url} alt=\"\" />\r\n            <div>\r\n                <h3 className='font-semibold'> {songInfo?.name} </h3>\r\n                <p> {songInfo?.artists?.[0]?.name} </p>\r\n            </div>\r\n        </div>\r\n        <div className='flex items-center justify-evenly'>\r\n            <SwitchHorizontalIcon className='button' />\r\n            {/* onClick={() => spotifyApi.skipToPrevious()} -- The API is not working */}\r\n            <RewindIcon className='button' />\r\n\r\n            {isPlaying ? (\r\n                <PauseIcon onClick={handlePlayPause} className='button w-10 h-10' />\r\n            ): (\r\n                <PlayIcon onClick={handlePlayPause} className='button w-10 h-10' />\r\n            )}\r\n\r\n            <FastForwardIcon className='button' />\r\n            {/* onClick={() => spotifyApi.skipToNext()} -- The API is not working */}\r\n            <ReplyIcon className='button' />\r\n        </div>\r\n        <div className='flex items-center space-x-3 md:space-x-4 justify-end pr-5'>\r\n            <VolumeDownIcon onClick={() => volume > 0 && setVolume(volume - 10)} className='button' />\r\n            <input className='w-14 md:w-28' type=\"range\" value={volume} onChange={e => setVolume(Number(e.target.value))} min={0} max={100} />\r\n            <VolumeUpIcon onClick={() => volume < 100 && setVolume(volume + 10)} className='button' />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Player\r\n","C:\\Users\\lenovo\\Desktop\\spotify-clone\\components\\Sidebar.jsx",[],[],"C:\\Users\\lenovo\\Desktop\\spotify-clone\\components\\Song.jsx",["79","80"],[],"import React from 'react'\r\nimport { useRecoilState } from 'recoil'\r\nimport { currentTrackIdState, isPlayingState } from '../atoms/songAtom'\r\nimport useSpotify from '../hooks/useSpotify'\r\nimport { millisToMinutesAndSeconds } from '../lib/time'\r\n\r\nfunction Song({ order, track }) {\r\n\r\n    const spotifyApi = useSpotify()\r\n    const [currentTrackId, setCurrentTrackId] = useRecoilState(currentTrackIdState)\r\n    const [isPlaying, setIsPlaying] = useRecoilState(isPlayingState)\r\n\r\n    const playSong = async () => {\r\n        setCurrentTrackId(track.track.id)\r\n        setIsPlaying(true)\r\n\r\n        spotifyApi.play({\r\n            urls: [track.track.url],\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div className='grid grid-cols-2 text-gray-500 py-4 px-5 hover:bg-gray-900 rounded-lg cursor-pointer' onClick={playSong}>\r\n        <div className='flex items-center space-x-4'>\r\n            <p> {order + 1} </p>\r\n            <img className='h-10 w-10' src={track.track.album.images[0].url} />\r\n            <div>\r\n                <p className='w-36 lg:w-64 font-semibold text-white truncate'> {track.track.name} </p>\r\n                <p className='w-40'> {track.track.artists[0].name} </p>\r\n            </div>\r\n        </div>\r\n\r\n        <div className='flex items-center justify-between ml-auto md:ml-0'>\r\n            <p className='w-40 hidden md:inline'> {track.track.album.name} </p>\r\n            <p>{millisToMinutesAndSeconds(track.track.duration_ms)}</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Song\r\n","C:\\Users\\lenovo\\Desktop\\spotify-clone\\components\\Songs.jsx",[],[],"C:\\Users\\lenovo\\Desktop\\spotify-clone\\lib\\spotify.js",[],[],"C:\\Users\\lenovo\\Desktop\\spotify-clone\\lib\\time.js",[],[],{"ruleId":"81","severity":1,"message":"82","line":8,"column":7,"nodeType":"83","endLine":8,"endColumn":168},{"ruleId":"84","severity":1,"message":"85","line":39,"column":8,"nodeType":"86","endLine":39,"endColumn":32,"suggestions":"87"},{"ruleId":"81","severity":1,"message":"82","line":47,"column":17,"nodeType":"83","endLine":47,"endColumn":92},{"ruleId":"81","severity":1,"message":"82","line":53,"column":13,"nodeType":"83","endLine":53,"endColumn":93},{"ruleId":"84","severity":1,"message":"88","line":58,"column":8,"nodeType":"86","endLine":58,"endColumn":50,"suggestions":"89"},{"ruleId":"84","severity":1,"message":"90","line":65,"column":8,"nodeType":"86","endLine":65,"endColumn":16,"suggestions":"91"},{"ruleId":"84","severity":1,"message":"92","line":67,"column":35,"nodeType":"93","endLine":67,"endColumn":46},{"ruleId":"81","severity":1,"message":"82","line":78,"column":13,"nodeType":"83","endLine":78,"endColumn":105},{"ruleId":"81","severity":1,"message":"82","line":26,"column":13,"nodeType":"83","endLine":26,"endColumn":80},{"ruleId":"94","severity":1,"message":"95","line":26,"column":13,"nodeType":"83","endLine":26,"endColumn":80},"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setPlaylist'. Either include it or remove the dependency array.","ArrayExpression",["96"],"React Hook useEffect has missing dependencies: 'currentTrackId' and 'fetchCurrentSong'. Either include them or remove the dependency array. Outer scope values like 'currentTrackIdState' aren't valid dependencies because mutating them doesn't re-render the component.",["97"],"React Hook useEffect has a missing dependency: 'debouncedAdjustVolume'. Either include it or remove the dependency array.",["98"],"React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead.","Identifier","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [spotifyApi, playlistId, setPlaylist]",{"range":"105","text":"106"},"Update the dependencies array to be: [spotifyApi, session, currentTrackId, fetchCurrentSong]",{"range":"107","text":"108"},"Update the dependencies array to be: [debouncedAdjustVolume, volume]",{"range":"109","text":"110"},[1180,1204],"[spotifyApi, playlistId, setPlaylist]",[1960,2002],"[spotifyApi, session, currentTrackId, fetchCurrentSong]",[2135,2143],"[debouncedAdjustVolume, volume]"]